name: DEPLOYMENT

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/github/**'
      - './README.md'
      - './.pages.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Refresh Members Data
        run: pnpm build-member
        env:
          GITEE_USERNAME: ${{ secrets.GITEE_USERNAME }}
          GITEE_PASSWORD: ${{ secrets.GITEE_PASSWORD }}

      - name: Refresh Blog Data
        run: pnpm build-blog
        env:
          GITEE_USERNAME: ${{ secrets.GITEE_USERNAME }}
          GITEE_PASSWORD: ${{ secrets.GITEE_PASSWORD }}

      - name: Refresh Emoji Data
        run: pnpm build-emoji

      - name: Build Site
        run: pnpm build-vitepress

      - name: Build lunaria
        run: pnpm lunaria:build

      # 部署
      - name: Deploy
        uses: easingthemes/ssh-deploy@v2.2.11
        env:
          SSH_PRIVATE_KEY: ${{ secrets.ACCESS_TOKEN }}
          # 删除服务器上目录里所有文件
          # ARGS: '-avz --delete'
          # 项目 build 后静态文件位置
          SOURCE: './dist/'
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.TARGET }}

      - name: Create Deployment via GitHub API
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "${{ github.ref_name }}",
              auto_merge: false,
              required_contexts: [],
              environment: "Production",
              payload: { web_url: "https://yuanshen.site/docs/", "commit_hash": "${{ env.COMMIT_HASH }}" }
            });
            console.log("Production deployment created:", response.data)
